#!/usr/bin/env bash
#
# Dynamically create the packer-virt-sysprep control script using the
# settings in the Packer configuration template.
#
# The control script is executed by the packer-virt-sysprep.service unit
# file and provides the mechanism through which all other requested
# virt-sysprep style scripts are executed.
# The virt-sysprep style operations to be run are individually specified in
# the Packer configuration template and exported as environment variables.

# Packer logging
echo "Creating packer-virt-sysprep.service run control script..."

# The directory that is to be used to hold all packer-virt-sysprep files
# and operations scripts is specified in the Packer configuration template
# and exported as an environment variable
PREFIX="${PACKER_VIRT_SYSPREP_DIR}"

# Control script location. This is referenced and run by the unit file.
CTRLF="${PREFIX}/packer-virt-sysprep-run-ops.sh"

# Set an explict path to Bash executable to ensure our scripts run under
# bash exclusively. Note that running the 'sh' command on Debian and
# Ubuntu systems will actually start a dash shell. dash will error and
# cause us problems when it encounters bash specific commands in the
# scripts
SH="$(command -v bash)"
if [ "x${SH}" = "x" ]; then
    echo "ERROR: Could not enumerate path for bash executable. Exiting"
    exit -1
fi


# Generate the packer-virt-sysprep operations control script

# Script shebang
echo "#!/usr/bin/env bash" >> ${CTRLF}

# bash_history: Remove all users bash history. Remove:
#     * /home/*/.bash_history
#     * /root/.bash_history
if [ "${SYSPREP_OP_BASH_HISTORY}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-bash-history.sh"
    echo "${SH} ${PREFIX}/sysprep-op-bash-history.sh" >> ${CTRLF}
fi

# crash_data: Remove crash data generated by kexec-tools by removing:
#     * /var/crash/*
#     * /var/log/dump/*
if [ "${SYSPREP_OP_CRASH_DATA}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-crash-data.sh"
    echo "${SH} ${PREFIX}/sysprep-op-crash-data.sh" >> ${CTRLF}
fi


# dhcp-client-state: Remove DHCP client release by removing:
#     * /var/lib/dhclient/*
#     * /var/lib/dhcp/*
if [ "${SYSPREP_OP_DHCP_CLIENT_STATE}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-dhcp-client-state.sh"
    echo "${SH} ${PREFIX}/sysprep-op-dhcp-client-state.sh" >> ${CTRLF}
fi

# firewall-rules: Remove custom firewall rules by removing:
#     * /etc/sysconfig/iptables
#     * /etc/firewalld/services/*
#     * /etc/firewalld/zones/*
if [ "${SYSPREP_OP_FIREWALL_RULES}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-firewall-rules.sh"
    echo "${SH} ${PREFIX}/sysprep-op-firewall-rules.sh" >> ${CTRLF}
fi

# logfiles: Remove every logfile ever created by removing:
#     # ...a ton of stuff!
if [ "${SYSPREP_OP_LOGFILES}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-logfiles.sh"
    echo "${SH} ${PREFIX}/sysprep-op-logfiles.sh" >> ${CTRLF}
fi

# machine-id: Remove the local machine ID by removing content from:
#     * /etc/machine-id
#     * /var/lib/dbus/machine-id
if [ "${SYSPREP_OP_MACHINE_ID}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-machine-id.sh"
    echo "${SH} ${PREFIX}/sysprep-op-machine-id.sh" >> ${CTRLF}
fi

# mail-spool: Remove email from the local mail spool directory
#     # /var/spool/mail/*
#     * /var/mail/*
if [ "${SYSPREP_OP_MAIL_SPOOL}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-mail-spool.sh"
    echo "${SH} ${PREFIX}/sysprep-op-mail-spool.sh" >> ${CTRLF}
fi

# package-manager-cache: Remove package manager cache by removing files
# under:
#     * /var/cache/apt/archives/
#     * /var/cache/dnf/
#     * /var/cache/yum/
#     * /var/cache/zypp*
if [ "${SYSPREP_OP_PACKAGE_MANAGER_CACHE}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-package-manager-cache.sh"
    echo "${SH} ${PREFIX}/sysprep-op-package-manager-cache.sh" >> ${CTRLF}
fi

# rpm-db: Remove host-specific RPM database files by removing:
#     # /var/lib/rpm/__db.*
if [ "${SYSPREP_OP_RPM_DB}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-rpm-db.sh"
    echo "${SH} ${PREFIX}/sysprep-op-rpm-db.sh" >> ${CTRLF}
fi

# ssh-hostkeys: Remove the SSH host keys in the guest by removing:
#     * /etc/ssh/*_host_*
if [ "${SYSPREP_OP_SSH_HOSTKEYS}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-ssh-hostkeys.sh"
    echo "${SH} ${PREFIX}/sysprep-op-ssh-hostkeys.sh" >> ${CTRLF}
fi

# tmp-files: Remove all temporary files and directories by removing:
#     * /tmp/*
#     * /var/tmp/*
if [ "${SYSPREP_OP_TMP_FILES}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-tmp-files.sh"
    echo "${SH} ${PREFIX}/sysprep-op-tmp-files.sh" >> ${CTRLF}
fi

# yum-uuid: Remove the yum UUID
#     * /var/lib/yum/uuid
if [ "${SYSPREP_OP_YUM_UUID}" = true ]; then
    echo "Service will run ${PREFIX}/sysprep-op-yum-uuid.sh"
    echo "${SH} ${PREFIX}/sysprep-op-yum-uuid.sh" >> ${CTRLF}
fi

# Script tail
echo "exit 0" >> ${CTRLF}


# Scripts to be run by systemd unit files must have the executable bit set
chmod u+x ${CTRLF}


exit 0
